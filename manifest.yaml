apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: nginx-controller
    control-plane: controller-manager
  name: nginx-controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: nginx-controller-system/nginx-controller-serving-cert
    controller-gen.kubebuilder.io/version: v0.9.2
  name: nginxes.nginx.my.domain
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: nginx-controller-webhook-service
          namespace: nginx-controller-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: nginx.my.domain
  names:
    kind: Nginx
    listKind: NginxList
    plural: nginxes
    shortNames:
    - ng
    singular: nginx
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.availableReplicas
      name: Replicas
      type: integer
    - jsonPath: .status.serviceName
      name: Service_Name
      type: string
    - jsonPath: .status.clusterIP
      name: Cluster-IP
      type: string
    - jsonPath: .status.externalIP
      name: External-IP
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Nginx is the Schema for the nginxes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NginxSpec defines the desired state of Nginx
            properties:
              replicas:
                format: int32
                type: integer
              serviceType:
                description: Service Type string describes ingress methods for a service
                type: string
            type: object
          status:
            description: NginxStatus defines the observed state of Nginx
            properties:
              availableReplicas:
                format: int32
                type: integer
              clusterIP:
                type: string
              deploymentName:
                type: string
              externalIP:
                type: string
              serviceName:
                type: string
            required:
            - availableReplicas
            - deploymentName
            - serviceName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-controller-manager
  namespace: nginx-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-leader-election-role
  namespace: nginx-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: nginx-controller-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - services/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginx.my.domain
  resources:
  - nginxes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nginx.my.domain
  resources:
  - nginxes/finalizers
  verbs:
  - update
- apiGroups:
  - nginx.my.domain
  resources:
  - nginxes/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-leader-election-rolebinding
  namespace: nginx-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: nginx-controller-controller-manager
  namespace: nginx-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-controller-manager-role
subjects:
- kind: ServiceAccount
  name: nginx-controller-controller-manager
  namespace: nginx-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: nginx-controller-controller-manager
  namespace: nginx-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: nginx-controller
    control-plane: controller-manager
  name: nginx-controller-controller-manager-metrics-service
  namespace: nginx-controller-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-webhook-service
  namespace: nginx-controller-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: nginx-controller
    control-plane: controller-manager
  name: nginx-controller-controller-manager
  namespace: nginx-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/mochizuki875/nginx-controller:v1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: nginx-controller-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-serving-cert
  namespace: nginx-controller-system
spec:
  dnsNames:
  - nginx-controller-webhook-service.nginx-controller-system.svc
  - nginx-controller-webhook-service.nginx-controller-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: nginx-controller-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kuberentes.io/name: issuer
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-selfsigned-issuer
  namespace: nginx-controller-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: nginx-controller-system/nginx-controller-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: nginx-controller-webhook-service
      namespace: nginx-controller-system
      path: /mutate-nginx-my-domain-v1-nginx
  failurePolicy: Fail
  name: mnginx.kb.io
  rules:
  - apiGroups:
    - nginx.my.domain
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - nginxes
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: nginx-controller-system/nginx-controller-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: nginx-controller
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: validatingwebhookconfiguration
    app.kubernetes.io/part-of: nginx-controller
  name: nginx-controller-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: nginx-controller-webhook-service
      namespace: nginx-controller-system
      path: /validate-nginx-my-domain-v1-nginx
  failurePolicy: Fail
  name: vnginx.kb.io
  rules:
  - apiGroups:
    - nginx.my.domain
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - nginxes
  sideEffects: None
